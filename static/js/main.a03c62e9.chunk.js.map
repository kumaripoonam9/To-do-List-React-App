{"version":3,"sources":["modals/CreateTask.js","modals/EditTask.js","components/Card.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["CreateTask","modal","toggle","save","useState","taskName","setTaskName","description","setDescription","handleChange","e","target","name","value","Modal","isOpen","ModalHeader","ModalBody","class","className","type","onChange","rows","ModalFooter","Button","color","onClick","taskObj","EditTask","updateTask","useEffect","Name","Description","preventDefault","tempObj","Card","index","deleteTask","updateListArray","setModal","colors","primaryColor","secondaryColor","style","obj","TodoList","taskList","setTaskList","arr","localStorage","getItem","JSON","parse","tempList","splice","setItem","stringify","window","location","reload","map","push","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a03c62e9.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst CreateTask = ({ modal, toggle, save }) => {\r\n\r\n    const [taskName, setTaskName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n\r\n        const {name, value} = e.target ;\r\n        if (name==\"taskName\") {\r\n            setTaskName(value)\r\n        }\r\n        else {\r\n            setDescription(value)\r\n        }\r\n    }\r\n\r\n    const handleSave = () => {\r\n        let taskObj = {}\r\n        taskObj[\"Name\"] = taskName\r\n        taskObj[\"Description\"] = description\r\n        save(taskObj)\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n\r\n            <ModalHeader toggle={toggle}>Create Task</ModalHeader>\r\n            <ModalBody>\r\n                <form>\r\n                    <div class=\"mb-3\">\r\n                        <label className=\"form-label\">Title</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={taskName} \r\n                            onChange={handleChange} \r\n                            name=\"taskName\" />\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <label className=\"form-label\">Description</label>\r\n                        <textarea\r\n                            className=\"form-control\"\r\n                            rows=\"4\"\r\n                            value={description}\r\n                            onChange={handleChange}\r\n                            name=\"description\" >\r\n                        </textarea>\r\n                    </div>\r\n                </form>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button color=\"primary\" onClick={handleSave}>Create</Button>{' '}\r\n                <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n            </ModalFooter>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default CreateTask;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst EditTask = ({ modal, toggle, updateTask, taskObj }) => {\r\n\r\n    const [taskName, setTaskName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n\r\n        const { name, value } = e.target;\r\n        if (name == \"taskName\") {\r\n            setTaskName(value)\r\n        }\r\n        else {\r\n            setDescription(value)\r\n        }\r\n    }\r\n\r\n    const handleUpdate = (e) => {\r\n        e.preventDefault()\r\n        let tempObj = {}\r\n        tempObj['Name'] = taskName\r\n        tempObj['Description'] = description\r\n        updateTask(tempObj)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTaskName(taskObj.Name)\r\n        setDescription(taskObj.Description)\r\n    }, [])\r\n\r\n    return (\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n\r\n            <ModalHeader toggle={toggle}>Edit Task</ModalHeader>\r\n            <ModalBody>\r\n                <form>\r\n                    <div class=\"mb-3\">\r\n                        <label className=\"form-label\">Title</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={taskName}\r\n                            onChange={handleChange}\r\n                            name=\"taskName\" />\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <label className=\"form-label\">Description</label>\r\n                        <textarea\r\n                            className=\"form-control\"\r\n                            rows=\"4\"\r\n                            value={description}\r\n                            onChange={handleChange}\r\n                            name=\"description\" >\r\n                        </textarea>\r\n                    </div>\r\n                </form>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button color=\"primary\" onClick={handleUpdate}>Update</Button>{' '}\r\n                <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n            </ModalFooter>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EditTask;\r\n","import React, { useState } from 'react';\r\nimport EditTask from '../modals/EditTask';\r\n\r\nconst Card = ({ taskObj, index, deleteTask, updateListArray }) => {\r\n    const [modal, setModal] = useState(false);\r\n\r\n    const colors = [\r\n        {\r\n            primaryColor: \"#5D93E1\",\r\n            secondaryColor: \"#ECF3FC\"\r\n        },\r\n        {\r\n            primaryColor: \"#F9D288\",\r\n            secondaryColor: \"#FEFAF1\"\r\n        },\r\n        {\r\n            primaryColor: \"#5DC250\",\r\n            secondaryColor: \"#F2FAF1\"\r\n        },\r\n        {\r\n            primaryColor: \"#F48687\",\r\n            secondaryColor: \"#FDF1F1\"\r\n        },\r\n        {\r\n            primaryColor: \"#B964F7\",\r\n            secondaryColor: \"#F3F0FD\"\r\n        }\r\n    ]\r\n\r\n    const toggle = () => {\r\n        setModal(!modal);\r\n    }\r\n\r\n    const updateTask = (obj) => {\r\n        updateListArray(obj, index)\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        deleteTask(index)\r\n    }\r\n\r\n    return (\r\n        <div className=\"card-wrapper mr-5\">\r\n            <div\r\n                className=\"card-top\"\r\n                style={{ \"background-color\": colors[index % 5].primaryColor }}></div>\r\n\r\n            <div className=\"task-holder\">\r\n                <span\r\n                    className=\"card-header\"\r\n                    style={{ \"background-color\": colors[index % 5].secondaryColor, \"border-radius\": \"10px\" }}>\r\n                    {taskObj.Name}\r\n                </span>\r\n                <p className=\"mt-3\">{taskObj.Description}</p>\r\n\r\n                <div style={{ \"position\": \"absolute\", \"right\": \"20px\", \"bottom\": \"20px\" }}>\r\n                    <i className=\"far fa-edit mx-4\"\r\n                        style={{\r\n                            \"color\": colors[index % 5].primaryColor,\r\n                            \"cursor\": \"pointer\"\r\n                        }}\r\n                        onClick={() => setModal(true)}></i>\r\n                    <i className=\"fas fa-trash-alt\"\r\n                        style={{\r\n                            \"color\": colors[index % 5].primaryColor,\r\n                            \"cursor\": \"pointer\"\r\n                        }}\r\n                        onClick={handleDelete}></i>\r\n                </div>\r\n            </div>\r\n            <EditTask modal={modal} toggle={toggle} updateTask={updateTask} taskObj={taskObj} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;","import React, { useEffect, useState } from 'react';\r\nimport CreateTask from '../modals/CreateTask'\r\nimport Card from './Card';\r\n\r\nconst TodoList = () => {\r\n\r\n    const [modal, setModal] = useState(false);\r\n    const [taskList, setTaskList] = useState([])\r\n\r\n    useEffect(() => {\r\n        let arr = localStorage.getItem(\"taskList\")\r\n        if (arr) {\r\n            let obj = JSON.parse(arr)\r\n            setTaskList(obj)\r\n        }\r\n    }, [])\r\n\r\n\r\n    const deleteTask = (index) => {\r\n        let tempList = taskList\r\n        tempList.splice(index, 1)\r\n        localStorage.setItem(\"taskList\", JSON.stringify(tempList))\r\n        setTaskList(tempList)\r\n        window.location.reload()\r\n    }\r\n\r\n    const updateListArray = (obj, index) => {\r\n        let tempList = taskList\r\n        tempList[index] = obj\r\n        localStorage.setItem(\"taskList\", JSON.stringify(tempList))\r\n        setTaskList(tempList)\r\n        window.location.reload()\r\n    }\r\n\r\n    const toggle = () => {\r\n        setModal(!modal);\r\n    }\r\n\r\n    const saveTask = (taskObj) => {\r\n        let tempList = taskList\r\n        tempList.push(taskObj)\r\n        localStorage.setItem(\"taskList\", JSON.stringify(tempList))\r\n        setTaskList(taskList)\r\n        setModal(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"header text-center\">\r\n                <h3>Todo List</h3>\r\n                <button className=\"btn btn-primary mt-2\" onClick={() => setModal(true)} >Create Task</button>\r\n            </div>\r\n            <div className=\"task-container\">\r\n                {taskList && taskList.map((obj, index) => <Card taskObj={obj} index={index} deleteTask={deleteTask} updateListArray={updateListArray} />)}\r\n            </div>\r\n            <CreateTask toggle={toggle} modal={modal} save={saveTask} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import './App.css';\nimport TodoList from './components/TodoList';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <TodoList />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}